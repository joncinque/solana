name: release-artifacts

on:
  workflow_call:
    inputs:
      commit:
        required: false
        type: string

jobs:
  windows-build:
    runs-on: windows-2022
    outputs:
      tag: ${{ steps.build.outputs.tag }}
      channel: ${{ steps.build.outputs.channel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0

      - name: Setup Rust
        shell: bash
        run: |
          source ci/rust-version.sh stable

      # copy the newest version env.sh before switching version.
      - name: Copy Env Script
        shell: bash
        run: |
          cp -r ci/env.sh /tmp/env.sh

      - name: Switch Version
        if: ${{ inputs.commit }}
        run: |
          git checkout ${{ inputs.commit }}

      - name: Build
        id: build
        shell: bash
        run: |
          vcpkg install openssl:x64-windows-static-md
          vcpkg integrate install
          choco install protoc
          export PROTOC="C:\ProgramData\chocolatey\lib\protoc\tools\bin\protoc.exe"
          source /tmp/env.sh
          echo "tag=$CI_TAG" >> $GITHUB_OUTPUT
          eval "$(ci/channel-info.sh)"
          echo "channel=$CHANNEL" >> $GITHUB_OUTPUT
          ci/publish-tarball.sh
          ldd target/release/solana-test-validator

      - name: Prepare Upload Files
        if: ${{ steps.build.outputs.channel != '' || steps.build.outputs.tag != '' }}
        shell: bash
        run: |
          FOLDER_NAME=${{ steps.build.outputs.tag || steps.build.outputs.channel }}
          mkdir -p "github-action-s3-upload/$FOLDER_NAME"
          cp -v "solana-release-x86_64-pc-windows-msvc.tar.bz2" "github-action-s3-upload/$FOLDER_NAME/"
          cp -v "solana-release-x86_64-pc-windows-msvc.yml" "github-action-s3-upload/$FOLDER_NAME/"
          cp -v "solana-install-init-x86_64-pc-windows-msvc"* "github-action-s3-upload/$FOLDER_NAME"

      - name: Upload Artifacts
        if: ${{ steps.build.outputs.channel != '' || steps.build.outputs.tag != '' }}
        uses: actions/upload-artifact@v3
        with:
          name: windows-artifact
          path: github-action-s3-upload/

  windows-s3-upload:
    if: ${{ needs.windows-build.outputs.channel != '' || needs.windows-build.outputs.tag != '' }}
    needs: [windows-build]
    runs-on: ubuntu-20.04
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: windows-artifact
          path: ./github-action-s3-upload
